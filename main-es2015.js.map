{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/product/product.component.ts","./src/app/product/product.component.html","./src/app/products-bar/products-bar.component.ts","./src/app/products-bar/products-bar.component.html","./src/app/services/product.ts","./src/app/services/products.service.ts","./src/app/store-buttons/store-buttons.component.ts","./src/app/store-buttons/store-buttons.component.html","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component, ChangeDetectorRef } from '@angular/core';\n\nclass Button {\n  private readonly iconDark: string;\n  private readonly iconLight: string;\n\n  constructor(icon: string, public readonly link: string) { \n    this.iconLight = `assets/images/${icon}.svg`\n    this.iconDark =  `assets/images/${icon}.dark.svg`\n  }\n}\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  readonly sunIconPath = 'assets/images/sun.svg'\n  readonly moonIconPath = 'assets/images/moon.svg'\n\n  readonly socialButtons = [\n    new Button(\"gmail\", \"mailto:elumixor@gmail.com\"),\n    new Button(\"github\", \"https://github.com/elumixor\"),\n    new Button(\"facebook\", \"https://www.facebook.com/elumixor\"),\n    new Button(\"instagram\", \"https://www.instagram.com/elumixor\"),\n  ]\n\n  nightMode: boolean\n\n  get themeImage(): string {\n    return this.nightMode ? this.sunIconPath : this.moonIconPath\n  }\n\n  constructor(private detector: ChangeDetectorRef) {\n    // todo: implememnt here logic checking the time of the day and/or user theme to set night mode to true or false\n  }\n\n  switchMode() {\n    this.nightMode = !this.nightMode\n    this.detector.detectChanges()\n  }\n}\n","<p id=\"title\">ELUMIXOR</p>\n<p id=\"subtitle\">\n  <a *ngFor=\"let button of socialButtons\" [href]=\"button.link\">\n    <img class=\"icon social\" [src]=\"nightMode ? button.iconLight : button.iconDark\" alt=\"\">\n  </a>\n</p>\n\n<!-- <img id=\"themeIcon\" class=\"icon button\" [src]=\"themeImage\" alt=\"\" (click)=\"switchMode()\"> -->\n\n<app-products-bar [selected]=0></app-products-bar>\n\n<app-product [selected]=0></app-product>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppComponent } from './app.component';\nimport { ProductsBarComponent } from './products-bar/products-bar.component';\nimport { ProductComponent } from './product/product.component';\nimport { StoreButtonsComponent } from './store-buttons/store-buttons.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    ProductsBarComponent,\n    ProductComponent,\n    StoreButtonsComponent\n  ],\n  imports: [\n    BrowserModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit, Input } from '@angular/core';\nimport { ProductsService } from '../services/products.service';\nimport { Product } from '../services/product';\nimport { DomSanitizer, SafeUrl } from '@angular/platform-browser';\n\n@Component({\n  selector: 'app-product',\n  templateUrl: './product.component.html',\n  styleUrls: ['./product.component.scss']\n})\nexport class ProductComponent implements OnInit {\n  public product: Product\n  public videoUrl?: SafeUrl\n\n  @Input() set selected(value: number) {\n    this.product = this.productsService.products[value]\n    if (this.product.videoUrl) {\n      this.videoUrl = this.sanitizer.bypassSecurityTrustResourceUrl(\n        \"https://www.youtube.com/embed/\" + this.product.videoUrl\n        + '?autoplay=1&mute=1&loop=1&playlist=' + this.product.videoUrl)\n    }\n  }\n\n  constructor(private productsService: ProductsService, private sanitizer: DomSanitizer) { }\n\n  ngOnInit(): void { }\n}\n","<span id=\"content\">\n    <p id=\"name\">{{product.name}}</p>\n    <p id=\"description\">{{product.description}}</p>\n    <p id=\"comment\">{{product.comment}}</p>\n\n    <app-store-buttons [googlePlayStore]=product.googlePlayStoreUrl [appleAppStore]=product.appleAppStoreUrl>\n    </app-store-buttons>\n</span>\n\n<iframe [width]=\"886 / 2\" [height]=\"886\" *ngIf=\"videoUrl\" [src]=videoUrl frameborder=\"0\" allow=\"autoplay\"></iframe>","import { Component, OnInit, Input } from '@angular/core';\nimport { ProductsService } from '../services/products.service';\n\n@Component({\n  selector: 'app-products-bar',\n  templateUrl: './products-bar.component.html',\n  styleUrls: ['./products-bar.component.scss']\n})\nexport class ProductsBarComponent implements OnInit {\n  @Input() selected: number\n\n  constructor(private productsService: ProductsService) { }\n\n  ngOnInit(): void { }\n\n  get products() { return this.productsService.products }\n\n  calculateBarTop(i: number): number {\n    const total = this.products.length;\n    const offset = 10;\n    return  offset + (100 - offset * 2) / total * i;\n  }\n}\n","<div id=\"bar\"></div>\n<div *ngFor=\"let p of products; index as i\" class=\"bar-circle\" [class.selected]=\"i === selected\" [style.top.%]=\"calculateBarTop(i)\"></div>","import { Optional } from '@angular/core';\n\nexport class Product {\n    constructor(\n        public name: string,\n        public description: string,\n        public comment: string,\n        public googlePlayStoreUrl: string,\n        public appleAppStoreUrl: string,\n        public videoUrl?: string,\n        public imagesUrls?: string[]) {}\n}\n","import { Injectable } from '@angular/core';\nimport { Product } from './product';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ProductsService {\n  public products: Product[] = [\n    new Product(\n      \"Color Match\",\n      \"Mobile game where you can put your skills to the test! \\nSimple yet challenging.\",\n      \"My first proudly released product!\",\n      `https://play.google.com/store/apps/details?id=com.elumixor.ColorMatch`,\n      `https://apps.apple.com/cz/app/color-match-spin-tap-react/id1525018660`,\n      `rCxQmMovUAQ`)\n  ]\n\n  constructor() { }\n}\n","import { Component, OnInit, Input } from '@angular/core';\n\n@Component({\n  selector: 'app-store-buttons',\n  templateUrl: './store-buttons.component.html',\n  styleUrls: ['./store-buttons.component.scss']\n})\nexport class StoreButtonsComponent implements OnInit {\n  @Input() googlePlayStore: string\n  @Input() appleAppStore: string\n\n  constructor() { }\n\n  ngOnInit(): void { }\n}\n","<a [href]=appleAppStore>\n    <img src=\"assets/images/app-store.svg\" alt=\"\">\n</a>\n<div id=\"space\"></div>\n<a [href]=googlePlayStore>\n    <img src=\"assets/images/google-play.svg\" alt=\"\">\n</a>","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}